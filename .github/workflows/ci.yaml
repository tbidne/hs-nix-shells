name: ci

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  schedule:
    # Every day at 00:00 UTC.
    #
    # https://crontab.guru
    - cron: '0 0 * * 0-6'

  workflow_dispatch:

jobs:
  default_dry_run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/b39924fc7764c08ae3b51beef9a3518c414cdb7d.tar.gz
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Dry run
        run: ./test/load_shell.sh --dry-run --verbose

  # Need to run these separately as there is not enough space to run them
  # all on the same machine.
  default:
    strategy:
      fail-fast: false
      matrix:
        ghc:
          - "ghc8107"
          - "ghc902"
          - "ghc925"
          - "ghc926"
          - "ghc927"
          - "ghc928"
          - "ghc944"
          - "ghc945"
          - "ghc946"
          - "ghc961"
          - "ghc962"
          - "ghc963"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/b39924fc7764c08ae3b51beef9a3518c414cdb7d.tar.gz
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      # There is a tension here in that we would like to test loading each shell
      # will all shells, but that can require more storage than our free runner
      # allows. For now, we are able to load all tools except hls, so that is
      # what we do. But we may need to further pare it down in the future.
      - name: Load shell
        run: |
          ./test/load_shell.sh \
            --ghc ${{ matrix.ghc }} \
            --hls false \
            --verbose

  cabal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/b39924fc7764c08ae3b51beef9a3518c414cdb7d.tar.gz
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Clone cabal
        uses: actions/checkout@v3
        with:
          repository: haskell/cabal
          ref: master
          path: ./cabal-build

      - name: Build
        run: |
          nix-shell . -A default --argstr ghcVers ghc963 --run '
            cd ./cabal-build \
              && cabal update \
              && cabal build cabal-install'

  liquidhaskell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/b39924fc7764c08ae3b51beef9a3518c414cdb7d.tar.gz
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Clone liquidhaskell
        uses: actions/checkout@v3
        with:
          repository: ucsd-progsys/liquidhaskell
          ref: develop
          path: ./liquidhaskell-build
          submodules: recursive

      - name: hls = true
        run: nix-shell . -A liquidhaskell --arg hls true --dry-run

      - name: Build
        run: |
          nix-shell . -A liquidhaskell --run '
            cd ./liquidhaskell-build \
              && cabal update \
              && cabal build'

      - name: Test
        run: |
          nix-shell . -A liquidhaskell --run '
            cd ./liquidhaskell-build \
              && cabal update \
              && cabal test'

  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/b39924fc7764c08ae3b51beef9a3518c414cdb7d.tar.gz
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Format
        run: |
          nix run ./ci#format
          git diff --exit-code --color=always
