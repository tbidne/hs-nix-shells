name: ci

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  default_dry_run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup nix
        uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/b39924fc7764c08ae3b51beef9a3518c414cdb7d.tar.gz
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Dry run
        run: ./test/load_default.sh --dry-run --verbose

  # Need to run these separately as there is not enough space to run them
  # all on the same machine.
  default_ghc_only:
    strategy:
      fail-fast: false
      matrix:
        ghc:
          - "ghc8107"
          - "ghc902"
          - "ghc925"
          - "ghc926"
          - "ghc927"
          - "ghc928"
          - "ghc944"
          - "ghc945"
          - "ghc961"
          - "ghc962"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup nix
        uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/b39924fc7764c08ae3b51beef9a3518c414cdb7d.tar.gz
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Load basic shell
        run: ./test/load_default.sh --ghc ${{ matrix.ghc }} --no-tools --verbose

  cabal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup nix
        uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/b39924fc7764c08ae3b51beef9a3518c414cdb7d.tar.gz
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Clone cabal
        uses: actions/checkout@v3
        with:
          repository: haskell/cabal
          ref: master
          path: ./cabal-build

      - name: Build
        run: |
          nix-shell . -A default --argstr ghcVers ghc945 --run '
            cd ./cabal-build \
              && cabal update \
              && cabal build cabal-install'
  ghc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup nix
        uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/b39924fc7764c08ae3b51beef9a3518c414cdb7d.tar.gz
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: hls = true
        run: nix-shell . -A ghc --arg hls true --dry-run

      - name: Clone ghc
        uses: actions/checkout@v3
        with:
          repository: ghc/ghc
          ref: master
          path: ./ghc-build
          submodules: recursive

      - name: Build
        run: |
          nix-shell . -A ghc --run '
            cd ./ghc-build \
              && cabal update \
              && ghc_fbuild'
  liquidhaskell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup nix
        uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/b39924fc7764c08ae3b51beef9a3518c414cdb7d.tar.gz
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Clone liquidhaskell
        uses: actions/checkout@v3
        with:
          repository: ucsd-progsys/liquidhaskell
          ref: develop
          path: ./liquidhaskell-build
          submodules: recursive

      - name: hls = true
        run: nix-shell . -A liquidhaskell --arg hls true --dry-run

      - name: Build
        run: |
          nix-shell . -A liquidhaskell --run '
            cd ./liquidhaskell-build \
              && cabal update \
              && cabal build'

      - name: Test
        run: |
          nix-shell . -A liquidhaskell --run '
            cd ./liquidhaskell-build \
              && cabal update \
              && cabal test'
  safe-exceptions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup nix
        uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/b39924fc7764c08ae3b51beef9a3518c414cdb7d.tar.gz
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Clone safe-exceptions
        uses: actions/checkout@v3
        with:
          repository: fpco/safe-exceptions
          ref: master
          path: ./safe-exceptions-build

      - name: Build
        run: |
          nix-shell . -A default --run '
              cd ./safe-exceptions-build \
                && cabal update \
                && cabal build'
  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup nix
        uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/b39924fc7764c08ae3b51beef9a3518c414cdb7d.tar.gz
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Format
        run: |
          nix run ./ci#format
          git diff --exit-code --color=always
